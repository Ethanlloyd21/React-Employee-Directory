{"version":3,"sources":["utils/API.js","componets/Footer/index.js","componets/Wrapper/index.js","componets/Dates/index.js","componets/Dob/index.js","componets/Context/index.js","componets/Directory/index.js","componets/Main/index.js","componets/Navbar/index.js","componets/File/index.js","componets/Headers/index.js","App.js","serviceWorker.js","index.js"],"names":["axios","get","Footer","className","Wrapper","props","Dates","type","style","value","onChange","event","field","Dob","onClick","whenClicked","args","text","Context","React","createContext","employees","dates","search","findByName","Directory","useContext","css","width","paddingLeft","borderRadius","buttonStyle","marginLeft","filterEmployees","startDate","endDate","handleChange","id","placeholder","onKeyUp","key","Main","children","Navbar","class","href","role","File","map","employee","login","uuid","src","picture","thumbnail","alt","name","first","last","title","cell","email","Date","dob","date","toLocaleDateString","Headers","sortEmployees","App","useState","setEmployees","lastSort","setLastSort","setSearch","setDates","useEffect","API","then","res","data","results","Provider","searchString","toLowerCase","foundByName","filter","indexOf","start","end","filteredEmployees","target","propertyToSort","sortedEmployees","sortStatus","sort","a","b","console","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"meAGe,aAEP,OAAOA,IAAMC,IAJR,kD,YCWEC,MARf,WACI,OACI,4BAAQC,UAAU,UACd,6G,MCCGC,MAJf,SAAiBC,GACb,OAAO,wCAAMF,UAAU,WAAcE,K,MCQ1BC,MAXf,SAAeD,GACX,OACI,2BACIE,KAAK,OACLC,MAAOH,EAAMG,MACbC,MAAOJ,EAAMI,MACbC,SAAU,SAACC,GAAD,OAAWN,EAAMK,SAASC,EAAON,EAAMO,W,MCQ9CC,MAZf,SAAaR,GACT,OACI,4BACIF,UAAU,YACVK,MAAOH,EAAMG,MACbM,QAAS,kBAAMT,EAAMU,YAAN,MAAAV,EAAK,YAAgBA,EAAMW,SAEzCX,EAAMY,OCFJC,EAPCC,IAAMC,cAAc,CAChCC,UAAW,GACXC,MAAO,GACPC,OAAO,GACPC,WAAY,eC0DDC,MA1Df,SAAmBpB,GAAQ,IAAD,EACgBqB,qBAAWR,GAAzCK,EADc,EACdA,OAAQD,EADM,EACNA,MAAOE,EADD,EACCA,WACjBG,EAAM,CACRC,MAAO,MACPC,YAAa,OACbC,aAAc,OAEZC,EAAc,CAChBD,aAAc,MACdE,WAAY,QAIhB,OACI,yBAAK7B,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,CACIK,MAAOuB,EACPhB,YAAaV,EAAM4B,gBACnBjB,KAAM,CAACM,EAAMY,UAAWZ,EAAMa,SAC9BlB,KAAI,SAER,kBAAC,EAAD,CACIT,MAAOmB,EACPlB,MAAOa,EAAMY,UACbxB,SAAUL,EAAM+B,aAChBxB,MAAK,cAET,kBAAC,EAAD,CACIJ,MAAOmB,EACPlB,MAAOa,EAAMa,QACbzB,SAAUL,EAAM+B,aAChBxB,MAAK,YAET,kBAAC,EAAD,CACIJ,MAAOuB,EACPhB,YAAaS,EACbR,KAAM,CAACO,GACPN,KAAI,YAER,2BACIoB,GAAG,OACH9B,KAAK,OACLC,MAAOmB,EACPW,YAAY,SACZ7B,MAAOc,EACPb,SAAU,SAACC,GAAD,OAAWN,EAAM+B,aAAazB,EAAnB,WACrB4B,QAAS,SAAC5B,GACF,UAAAA,EAAM6B,KACNhB,EAAWD,S,MChDxBkB,MAJf,SAAcpC,GACV,OAAO,yBAAKF,UAAU,QAAQE,EAAMqC,W,MCiBzBC,MAlBf,WACI,OAEI,yBAAKxC,UAAU,4BAA4BkC,GAAG,OAC1C,yBAAKO,MAAM,aACP,wBAAIzC,UAAU,aAAd,sBACA,uBAAGA,UAAU,QAAb,qEACA,wBAAIA,UAAU,SACd,uBAAGA,UAAU,OAAOkC,GAAG,UAAS,mHAEhC,uBAAGlC,UAAU,yBAAyB0C,KAAK,2DAA2DC,KAAK,UAA3G,c,MCyBDC,MAlCf,WAAiB,IACL1B,EAAcK,qBAAWR,GAAzBG,UACR,OACI,wBAAIlB,UAAU,cACTkB,EAAU2B,KAAI,SAACC,GAAD,OACX,wBAAIT,IAAKS,EAASC,MAAMC,KAAMhD,UAAU,mBAGpC,yBAAKA,UAAU,SACX,yBACIiD,IAAKH,EAASI,QAAQC,UACtBC,IAAG,UAAKN,EAASO,KAAKC,MAAnB,YAA4BR,EAASO,KAAKE,MAC7CC,MAAK,UAAKV,EAASO,KAAKC,MAAnB,YAA4BR,EAASO,KAAKE,SAGvD,yBAAKvD,UAAU,QACX,qCAAO8C,EAASO,KAAKC,MAArB,YAA8BR,EAASO,KAAKE,QAEhD,yBAAKvD,UAAU,QACX,2BAAI8C,EAASW,OAEjB,yBAAKzD,UAAU,SACX,2BAAI8C,EAASY,QAEjB,yBAAK1D,UAAU,QACX,2BAAI,IAAI2D,KAAKb,EAASc,IAAIC,MAAMC,6B,MCAzCC,MA1Bf,SAAiB7D,GACb,OACI,yBAAKF,UAAU,kBACX,yBAAKA,UAAU,SACX,qCAEJ,yBAAKA,UAAU,QACX,uBAAGA,UAAU,WAAWW,QAAS,kBAAMT,EAAM8D,cAAN,UAAvC,QACS,uBAAGvB,MAAM,4BAGtB,yBAAKzC,UAAU,QACX,qCAEJ,yBAAKA,UAAU,SACX,qCAEJ,yBAAKA,UAAU,QACX,uBAAGA,UAAU,WAAWW,QAAS,kBAAMT,EAAM8D,cAAN,SAAvC,OACQ,uBAAGvB,MAAM,8BC2GlBwB,MArHf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNhD,EADM,KACKiD,EADL,OAEmBD,mBAAS,IAF5B,mBAENE,EAFM,KAEIC,EAFJ,OAGeH,mBAAS,IAHxB,mBAGN9C,EAHM,KAGEkD,EAHF,OAIaJ,mBAAS,CACjCnC,UAAU,aACVC,QAAQ,eANG,mBAINb,EAJM,KAICoD,EAJD,KAwFb,OA/EAC,qBAAU,WAaRC,IAAaC,MAAK,SAACC,GACjBR,EAAaQ,EAAIC,KAAKC,cAZvB,IA+ED,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAQC,SAAT,CACExE,MAAO,CAAEc,SAAQD,QAAOD,YAAWG,WAlEzC,SAAoB0D,GAClBA,EAAeA,EAAaC,cAC5B,IAAMC,EAAc,YAAI/D,GAAWgE,QAAO,SAACpC,GACzC,OAGS,IAFP,UAAGA,EAASO,KAAKC,MAAM0B,cAAvB,YAAwClC,EAASO,KAAKE,KAAKyB,eAAgBG,QACzEJ,MAINZ,EAAac,MA4DT,kBAAC,EAAD,KAEE,kBAAC,EAAD,CACEnD,gBA5DV,SAAyBC,EAAWC,GAClC,IAAIoD,EAAQ,IAAIzB,KAAK5B,GACjBsD,EAAM,IAAI1B,KAAK3B,GACbsD,EAAoB,YAAIpE,GAAWgE,QAAO,SAACpC,GAC/C,IAAIe,EAAO,IAAIF,KAAKb,EAASc,IAAIC,MACjC,OAAOA,GAAQuB,GAASvB,GAAQwB,KAElClB,EAAamB,IAsDLrD,aAvFV,SAAsBzB,EAAOC,GAClB,WAALA,EACF6D,EAAU9D,EAAM+E,OAAOjF,OAEvBiE,EAAS,eAAKpD,EAAN,eAAcV,EAAQD,EAAM+E,OAAOjF,YAqFvC,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAS0D,cAtDnB,SAAuBwB,GACrB,IAAIC,EACAC,EACJ,OAAQF,GACN,IAAI,OACEpB,IAAaoB,GACfC,EAAkBvE,EAAUyE,MAAK,SAACC,EAAGC,GAAJ,OAC/BD,EAAEvC,KAAKE,KAAOsC,EAAExC,KAAKE,KAAO,GAAK,KAEnCmC,EAAaF,IAEbC,EAAkBvE,EAAUyE,MAAK,SAACC,EAAGC,GAAJ,OAC/BD,EAAEvC,KAAKE,KAAOsC,EAAExC,KAAKE,MAAQ,EAAI,KAEnCmC,EAAU,IAEZvB,EAAasB,GACbpB,EAAYqB,GACZ,MACF,IAAI,MACEtB,IAAaoB,GACfC,EAAkBvE,EAAUyE,MAAK,SAACC,EAAGC,GAAJ,OAC/BD,EAAEhC,IAAIC,KAAOgC,EAAEjC,IAAIC,KAAO,GAAK,KAEjC6B,EAAaF,IAEbC,EAAkBvE,EAAUyE,MAAK,SAACC,EAAGC,GAAJ,OAC/BD,EAAEhC,IAAIC,KAAOgC,EAAEjC,IAAIC,MAAQ,EAAI,KAEjC6B,EAAU,IAEZvB,EAAasB,GACbpB,EAAYqB,GACZ,MACF,QACEI,QAAQC,IAAR,wBAoBI,kBAAC,EAAD,SAKN,kBAAC,EAAD,QC7GcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlC,MAAK,SAAAmC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlB,QAAQkB,MAAMA,EAAMC,c","file":"static/js/main.87fd3e98.chunk.js","sourcesContent":["import axios from 'axios';\nconst BASEURL = `https://randomuser.me/api/?nat=us&results=100`;\n\nexport default {\n    search() {\n        return axios.get(BASEURL);\n    },\n};","import './style.css';\n\nimport React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <span>Employee Directory 2020 | Lloyd Marcelino | portfolio: lloydmarcelino.com</span>\n        </footer>\n    );\n}\n\nexport default Footer;","import './style.css';\n\nimport React from 'react';\n\nfunction Wrapper(props) {\n    return <main className=\"wrapper\" {...props}></main>;\n}\n\nexport default Wrapper;","import React from 'react';\n\nfunction Dates(props) {\n    return (\n        <input\n            type=\"date\"\n            style={props.style}\n            value={props.value}\n            onChange={(event) => props.onChange(event, props.field)}\n        />\n    );\n}\n\nexport default Dates;","import React from 'react';\nimport './style.css';\n\n\nfunction Dob(props) {\n    return (\n        <button\n            className=\"DOBsearch\"\n            style={props.style}\n            onClick={() => props.whenClicked(...props.args)}\n        >\n            {props.text}\n        </button>\n    );\n}\n\nexport default Dob;","import React from 'react';\n\nconst Context = React.createContext({\n    employees: [],\n    dates: {},\n    search: ``,\n    findByName: () => { },\n});\n\nexport default Context;","import React, { useContext } from 'react';\nimport './style.css';\nimport Dates from '../Dates';\nimport Dob from '../Dob';\nimport Context from '../Context';\n\nfunction Directory(props) {\n    const { search, dates, findByName } = useContext(Context);\n    const css = {\n        width: '20%',\n        paddingLeft: '10px',\n        borderRadius: '8px'\n    };\n    const buttonStyle = {\n        borderRadius: '8px',\n        marginLeft: '10px'\n\n    }\n\n    return (\n        <div className=\"directory\">\n            <div className=\"dir\">\n                <Dob\n                    style={buttonStyle}\n                    whenClicked={props.filterEmployees}\n                    args={[dates.startDate, dates.endDate]}\n                    text={`DOB:`}\n                />\n                <Dates\n                    style={css}\n                    value={dates.startDate}\n                    onChange={props.handleChange}\n                    field={`startDate`}\n                />\n                <Dates\n                    style={css}\n                    value={dates.endDate}\n                    onChange={props.handleChange}\n                    field={`endDate`}\n                />\n                <Dob\n                    style={buttonStyle}\n                    whenClicked={findByName}\n                    args={[search]}\n                    text={`Search:`}\n                />\n                <input\n                    id=\"name\"\n                    type=\"text\"\n                    style={css}\n                    placeholder=\"Search\"\n                    value={search}\n                    onChange={(event) => props.handleChange(event, `search`)}\n                    onKeyUp={(event) => {\n                        if (event.key === `Enter`) {\n                            findByName(search);\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Directory;","import React from 'react';\nimport './style.css';\n\nfunction Main(props) {\n    return <div className=\"main\">{props.children}</div>;\n}\n\nexport default Main;","import React from 'react';\nimport './style.css';\n\nfunction Navbar() {\n    return (\n\n        <div className=\"jumbotron jumbotron-fluid\" id=\"top\">\n            <div class=\"container\">\n                <h1 className=\"display-4\">Employee Directory</h1>\n                <p className=\"lead\">A directory of employee's information in a single point of access</p>\n                <hr className=\"my-4\"></hr>\n                <p className=\"lead\" id=\"helper\"><i>Click on carrots to filter by heading or use the search box to narrow your results.</i></p>\n\n                <a className=\"btn btn-primary btn-lg\" href=\"https://ethanlloyd21.github.io/React-Employee-Directory/\" role=\"button\">Refresh</a>\n\n            </div>\n        </div>\n\n    );\n}\n\nexport default Navbar;","import React, { useContext } from 'react';\nimport './file.css';\nimport Context from '../Context';\n\nfunction File() {\n    const { employees } = useContext(Context);\n    return (\n        <ul className=\"list-group\">\n            {employees.map((employee) => (\n                <li key={employee.login.uuid} className=\"list-group-item\">\n\n\n                    <div className=\"image\">\n                        <img\n                            src={employee.picture.thumbnail}\n                            alt={`${employee.name.first} ${employee.name.last}`}\n                            title={`${employee.name.first} ${employee.name.last}`}\n                        />\n                    </div>\n                    <div className=\"info\">\n                        <p>{`${employee.name.first} ${employee.name.last}`}</p>\n                    </div>\n                    <div className=\"info\">\n                        <p>{employee.cell}</p>\n                    </div>\n                    <div className=\"email\">\n                        <p>{employee.email}</p>\n                    </div>\n                    <div className=\"info\">\n                        <p>{new Date(employee.dob.date).toLocaleDateString()}</p>\n                    </div>\n\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nexport default File;","import React from 'react';\nimport './style.css';\n\nfunction Headers(props) {\n    return (\n        <div className=\"column-headers\">\n            <div className=\"image\">\n                <p>Image</p>\n            </div>\n            <div className=\"data\">\n                <p className=\"sortable\" onClick={() => props.sortEmployees(`name`)}>\n                    Name <i class=\"fa fa-angle-double-up\"></i>\n                </p>\n            </div>\n            <div className=\"data\">\n                <p>Phone</p>\n            </div>\n            <div className=\"email\">\n                <p>Email</p>\n            </div>\n            <div className=\"data\">\n                <p className=\"sortable\" onClick={() => props.sortEmployees(`dob`)}>\n                    DOB <i class=\"fa fa-angle-double-up\"></i>\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default Headers;","import React, { useState, useEffect } from 'react';\nimport API from './utils/API';\nimport './App.css';\nimport Footer from './componets/Footer';\nimport Wrapper from './componets/Wrapper';\nimport Directory from './componets/Directory';\nimport Main from './componets/Main';\nimport Navbar from './componets/Navbar';\nimport File from './componets/File';\nimport Context from './componets/Context';\nimport Headers from './componets/Headers';\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [lastSort, setLastSort] = useState(``);\n  const [search, setSearch] = useState(``);\n  const [dates, setDates] = useState({\n    startDate: `1950-01-01`,\n    endDate: `2000-01-01`,\n  });\n\n  useEffect(() => {\n    searchEmployees();\n  }, []);\n\n  function handleChange(event, field) {\n    if (field === `search`) {\n      setSearch(event.target.value);\n    } else {\n      setDates({ ...dates, [field]: event.target.value });\n    }\n  }\n\n  function searchEmployees() {\n    API.search().then((res) => {\n      setEmployees(res.data.results);\n    });\n  }\n\n  function findByName(searchString) {\n    searchString = searchString.toLowerCase();\n    const foundByName = [...employees].filter((employee) => {\n      return (\n        `${employee.name.first.toLowerCase()} ${employee.name.last.toLowerCase()}`.indexOf(\n          searchString\n        ) !== -1\n      );\n    });\n    setEmployees(foundByName);\n  }\n\n  function filterEmployees(startDate, endDate) {\n    let start = new Date(startDate);\n    let end = new Date(endDate);\n    const filteredEmployees = [...employees].filter((employee) => {\n      let date = new Date(employee.dob.date);\n      return date >= start && date <= end;\n    });\n    setEmployees(filteredEmployees);\n  }\n\n  function sortEmployees(propertyToSort) {\n    let sortedEmployees;\n    let sortStatus;\n    switch (propertyToSort) {\n      case `name`:\n        if (lastSort !== propertyToSort) {\n          sortedEmployees = employees.sort((a, b) =>\n            a.name.last > b.name.last ? 1 : -1\n          );\n          sortStatus = propertyToSort;\n        } else {\n          sortedEmployees = employees.sort((a, b) =>\n            a.name.last > b.name.last ? -1 : 1\n          );\n          sortStatus = ``;\n        }\n        setEmployees(sortedEmployees);\n        setLastSort(sortStatus);\n        break;\n      case `dob`:\n        if (lastSort !== propertyToSort) {\n          sortedEmployees = employees.sort((a, b) =>\n            a.dob.date > b.dob.date ? 1 : -1\n          );\n          sortStatus = propertyToSort;\n        } else {\n          sortedEmployees = employees.sort((a, b) =>\n            a.dob.date > b.dob.date ? -1 : 1\n          );\n          sortStatus = ``;\n        }\n        setEmployees(sortedEmployees);\n        setLastSort(sortStatus);\n        break;\n      default:\n        console.log(`nothing provided`);\n    }\n  }\n\n  return (\n\n    <div>\n      <Navbar />\n      <Context.Provider\n        value={{ search, dates, employees, findByName }}\n      >\n\n        <Wrapper>\n\n          <Directory\n            filterEmployees={filterEmployees}\n            handleChange={handleChange}\n          />\n          <Main>\n            <Headers sortEmployees={sortEmployees} />\n            <File />\n          </Main>\n\n        </Wrapper>\n      </Context.Provider>\n      <Footer />\n\n\n    </div>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}